name: "CI/CD for Task Manager"  # Название workflow 

on:  # Триггеры для запуска workflow
  push:  # При push в ветку master
    branches:
      - master
  pull_request:  # При создании pull request в master
    branches:
      - master # Триггер при создании PR в master

jobs:  # Определение заданий
  build-and-test:  # Имя задания
    runs-on: ubuntu-latest  # Операционная система для выполнения 
    steps:  # Последовательность шагов
      - name: Checkout code  # Клонирование репозитория
        uses: actions/checkout@v4  # Использует стандартный action для клонирования 

      - name: Set up Python  # Настройка окружения Python
        uses: actions/setup-python@v5  # Установка Python через action 
        with:
          python-version: "3.13.3"  # Версия Python согласно требованиям 

      - name: Install Xvfb for GUI emulation
        run: |
          sudo apt-get update && sudo apt-get install -y xvfb  # Установка эмулятора X11
          sudo apt-get install -y libgl1-mesa-glx libegl1-mesa  # Дополнительные зависимости для PyQt


      - name: Install dependencies  # Установка зависимостей
        run: |  # Выполняет команды в терминале
          pip install -r requirements.txt  # Установка основных зависимостей
          pip install pytest coverage PyQt5==5.15.17  # Добавочные зависимости для тестов 

      - name: Run tests with coverage  # Запуск тестов
        run: |  # Команды для выполнения тестов
          export DISPLAY=:99  # Настройка эмулятора
          Xvfb :99 -screen 0 1024x768x24 &  # Запуск Xvfb
          coverage run -m unittest discover -s tests  # Запуск тестов с покрытием
          coverage html  # Генерация HTML-отчета о покрытии 
          pkill Xvfb  # Остановка Xvfb после тестов

      - name: Upload coverage report  # Сохранение отчета как артефакта
        uses: actions/upload-artifact@v4  # Action для загрузки результатов 
        with:
          name: coverage-report  # Имя артефакта
          path: htmlcov/  # Путь к сгенерированному отчету

      - name: Show test results  # Вывод содержимого отчета в логи
        run: cat htmlcov/index.html  # Просмотр содержимого файла

      - name: Check test success  # Проверка на провал тестов
        if: failure()  # Условие выполнения: если предыдущие шаги провалились
        run: echo "Tests failed. Check logs for details."  # Вывод ошибки
